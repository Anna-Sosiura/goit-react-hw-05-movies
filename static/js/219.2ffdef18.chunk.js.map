{"version":3,"file":"static/js/219.2ffdef18.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx","service/movie-cervice.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchForm = ({ handleSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    e.preventDefault();\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    handleSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input\n          type=\"text\"\n          placeholder=\"Search movie\"\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { StyledLink } from 'components/Components.styled';\nconst SearchMovies = ({ movies, search }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title, overview, poster_path }) => (\n        <li key={id}>\n          <StyledLink\n            to={`/movies/${id}`}\n            state={{ from: `/movies?${search}` }}\n          >\n            <h2>{title}</h2>\n            <img\n              height={100}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://i.imgur.com/jtwlswk.png'\n              }\n              alt={overview}\n            />\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default SearchMovies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../service/movie-cervice';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nconst Movies = () => {\n  const [search, setSearch] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const searchParams = search.toString();\n    if (searchParams) {\n      setLoader(true);\n      setError(null);\n      const getSearchMovies = async () => {\n        try {\n          const { results: movies } = await searchMovies(searchParams);\n          setMovies(movies);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoader(false);\n        }\n      };\n      getSearchMovies();\n    }\n  }, [search, setError, setLoader]);\n\n  const handleSearch = query => {\n    if (query) setSearch(`query=${query}`);\n  };\n\n  return (\n    <>\n      <SearchForm handleSearch={handleSearch} />\n      {loader ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movies.length > 0 && <SearchMovies movies={movies} search={search} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '5353ffa6d3e8c52fad3e3fb7502c3b42';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie?${query}`);\n  return data;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n"],"names":["_ref","handleSearch","query","setQuery","useState","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","type","placeholder","name","value","onChange","target","toLowerCase","movies","search","map","_ref2","id","title","overview","poster_path","StyledLink","to","concat","state","from","height","src","alt","Movies","setSearch","useSearchParams","setMovies","loader","setLoader","error","setError","useEffect","searchParams","toString","getSearchMovies","async","results","searchMovies","message","SearchForm","length","SearchMovies","axios","api_key","getTrending","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}