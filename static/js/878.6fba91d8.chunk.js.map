{"version":3,"file":"static/js/878.6fba91d8.chunk.js","mappings":"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","sources":["components/MovieDetailsBlok/MovieDetailsBlok.jsx","pages/MovieDetails/MovieDetails.jsx","service/movie-cervice.js"],"sourcesContent":["import { StyledLink } from 'components/Components.styled';\nconst MovieDetailsBlok = ({ movie }) => {\n  const { poster_path, overview, title, release_date, genres, vote_average } =\n    movie ?? {};\n  const date = release_date?.split('-')[0];\n  const rating = (vote_average * 10)?.toFixed(0);\n\n  return (\n    <>\n      <section>\n        <img\n          height={500}\n          weight={500}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://i.imgur.com/jtwlswk.png'\n          }\n          alt={overview}\n        />\n        <div>\n          <h2>{`${title} (${date})`}</h2>\n          <p>User score: {rating}%</p>\n          <h3>Overwiew</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres.map(({ id, name }) => (\n              <span key={id}>{name}</span>\n            ))}\n          </ul>\n        </div>\n      </section>\n      <span>Additional information:</span>\n      <ul>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default MovieDetailsBlok;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'service/movie-cervice';\nimport MovieDetailsBlok from 'components/MovieDetailsBlok/MovieDetailsBlok';\nimport { StyledLink } from 'components/Components.styled';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getDetails = async () => {\n      setLoader(true);\n      setError(null);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getDetails();\n  }, [movieId, setError, setLoader]);\n  return (\n    <>\n      <StyledLink to={'/'}>{'<- Back'}</StyledLink>\n\n      {loader ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movie && <MovieDetailsBlok movie={movie} />\n      )}\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '5353ffa6d3e8c52fad3e3fb7502c3b42';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie?${query}`);\n  return data;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n"],"names":["_ref","_ref2","movie","poster_path","overview","title","release_date","genres","vote_average","date","split","rating","toFixed","_jsxs","_Fragment","children","_jsx","height","weight","src","concat","alt","map","_ref3","id","name","StyledLink","to","MovieDetails","setMovie","useState","loader","setLoader","error","setError","movieId","useParams","useEffect","async","data","getMovieDetails","message","getDetails","MovieDetailsBlok","Outlet","axios","api_key","getTrending","results","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}