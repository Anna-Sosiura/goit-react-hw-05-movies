{"version":3,"file":"static/js/186.51892651.chunk.js","mappings":"qMAIA,MA4CA,EA5CgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACWC,WACjBJ,GAAU,GACVE,GAAS,GACT,IACE,MAAQG,QAAST,SAAkBU,EAAAA,EAAAA,IAAgBZ,GACnDG,EAAWD,EAKb,CAJE,MAAOK,GACPC,EAASD,EAAMM,QACjB,CAAC,QACCP,GAAU,EACZ,GAEFQ,EAAY,GACX,CAACd,EAASQ,EAAUF,KAGrBS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHZ,GACCa,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDV,GACFW,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,IAEJL,EAAQiB,OAAS,IACfD,EAAAA,EAAAA,KAAA,OAAAD,SACGf,EAAQkB,KAAIC,IAAA,IAAC,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EAAA,OACnCN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASM,MACZR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,YAAUO,OAFNF,EAGJ,QAKZ,C,kFCzCPG,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,MAAMC,EAAcjB,UACzB,MAAM,KAAEkB,SAAeH,EAAAA,EAAAA,IAAU,uBACjC,OAAOG,EAAKjB,OAAO,EAERkB,EAAenB,UAC1B,MAAM,KAAEkB,SAAeH,EAAAA,EAAAA,IAAU,gBAADK,OAAiBC,IACjD,OAAOH,CAAI,EAEAI,EAAkBtB,UAC7B,MAAM,KAAEkB,SAAeH,EAAAA,EAAAA,IAAU,SAADK,OAAU9B,IAC1C,OAAO4B,CAAI,EAEAK,EAAkBvB,UAC7B,MAAM,KAAEkB,SAAeH,EAAAA,EAAAA,IAAU,SAADK,OAAU9B,EAAO,aACjD,OAAO4B,CAAI,EAEAhB,EAAkBF,UAC7B,MAAM,KAAEkB,SAAeH,EAAAA,EAAAA,IAAU,SAADK,OAAU9B,EAAO,aACjD,OAAO4B,CAAI,C","sources":["components/Reviews/Reviews.jsx","service/movie-cervice.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'service/movie-cervice';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getReviews = async () => {\n      setLoader(true);\n      setError(false);\n      try {\n        const { results: reviews } = await getMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getReviews();\n  }, [movieId, setError, setLoader]);\n\n  return (\n    <>\n      <h4>Reviews</h4>\n      {loader ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        reviews.length > 0 && (\n          <div>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>Comment: {content}</p>\n              </li>\n            ))}\n          </div>\n        )\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '5353ffa6d3e8c52fad3e3fb7502c3b42';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie?${query}`);\n  return data;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","loader","setLoader","error","setError","useEffect","async","results","getMovieReviews","message","getReviews","_jsxs","_Fragment","children","_jsx","length","map","_ref","id","author","content","axios","api_key","getTrending","data","searchMovies","concat","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}